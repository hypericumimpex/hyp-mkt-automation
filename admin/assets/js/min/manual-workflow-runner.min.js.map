{"version":3,"sources":["manual-workflow-runner.js"],"names":["jQuery","$","Finder","Runner","ProgressBar","update","$el","progress","find","stop","animate","width","stopped","batchSize","ruleGroupProgress","$matchesTable","$resultsContainer","$startButton","$stopButton","$step2","$step3","$workflowField","$noMatchesMessage","reset","empty","updateResultsCount","updateProgressBar","hide","start","show","prop","getWorkflowQuickFilterInfo","data","i","possible_result_counts","push","group_number","offset","total","complete","findSet","getCurrentRuleGroupIndex","length","groupIndex","group","post_data","action","workflow_id","val","batch_size","rule_group","post","ajaxurl","findSetResponse","response","success","object_id","results","resultExists","result","prepend","getResultsCount","removeProp","text","getCurrentProgress","Math","round","callback","console","log","click","change","itemsToAddToQueue","itemsToAddCount","$log_adding","$log_added","each","this","startAddToQueue","addBatchToQueue","completedAddingToQueue","batch","splice","queue_url"],"mappings":"AAIAA,OAAO,SAASC,GAEf,IAAIC,EAAS,GACTC,EAAS,GACTC,EAAc,CAElBC,OAAqB,SAAUC,EAAKC,GACnCD,EAAIE,KAAK,mDAAmDC,OAAOC,QAAS,CAC3EC,MAAOJ,EAAW,KACH,IAAbA,EAAiB,EAAI,OAGzBL,EAAOU,SAAU,EACjBV,EAAOW,UAAY,GAOnBX,EAAOY,kBAAoB,GAO3BZ,EAAOa,cAAgBd,EAAE,6CACzBC,EAAOc,kBAAoBf,EAAE,+CAC7BC,EAAOe,aAAehB,EAAE,gDACxBC,EAAOgB,YAAcjB,EAAE,+CACvBC,EAAOiB,OAASlB,EAAE,sCAClBC,EAAOkB,OAASnB,EAAE,sCAClBC,EAAOmB,eAAiBpB,EAAE,8CAC1BC,EAAOoB,kBAAoBrB,EAAE,kDAI7BC,EAAOqB,MAAQ,WACdrB,EAAOY,kBAAoB,GAC3BZ,EAAOU,SAAU,EACjBV,EAAOc,kBAAkBQ,QACzBtB,EAAOuB,qBACPvB,EAAOwB,oBACPxB,EAAOkB,OAAOO,OACdzB,EAAOa,cAAcY,OACrBzB,EAAOoB,kBAAkBK,OACzBxB,EAAOoB,SAIRrB,EAAO0B,MAAQ,WACd1B,EAAOqB,QAEPrB,EAAOgB,YAAYW,OACnB3B,EAAOa,cAAcc,OACrB3B,EAAOU,SAAU,EACjBV,EAAOe,aAAaa,KAAK,YAAY,GAErC5B,EAAO6B,2BAA2B,SAAUC,GAC3C,IAAM,IAAIC,KAAKD,EAAKE,uBACnBhC,EAAOY,kBAAkBqB,KAAK,CAC7BC,aAAcH,EACdI,OAAQ,EACRC,MAAON,EAAKE,uBAAuBD,GACnCM,UAAU,IAIZrC,EAAOsC,aASTtC,EAAOuC,yBAA2B,WACjC,IAAM,IAAIR,EAAI,EAAGA,EAAI/B,EAAOY,kBAAkB4B,OAAQT,IAAM,CAG3D,IAFa/B,EAAOY,kBAAkBmB,GAEzBM,SACZ,OAAON,EAGT,OAAO,GAIR/B,EAAOsC,QAAU,WAChB,IAAKtC,EAAOU,SAAW,IAAMV,EAAOY,kBAAkB4B,OAAtD,CAIA,IAAIC,EAAazC,EAAOuC,2BAGxB,IAAK,IAAUE,EAAf,CAKA,IAAIC,EAAQ1C,EAAOY,kBAAkB6B,GAEjCE,EAAY,CACfC,OAAQ,yCACRC,YAAa7C,EAAOmB,eAAe2B,MACnCX,OAAQO,EAAMP,OACdY,WAAY/C,EAAOW,UACnBqC,WAAYN,EAAMR,cAGnBnC,EAAEkD,KAAMC,QAASP,EAAW3C,EAAOmD,sBAdlCnD,EAAOqC,aAiBTrC,EAAOmD,gBAAkB,SAAUC,GAClC,IAAIX,EAAazC,EAAOuC,2BACpBG,EAAQ1C,EAAOY,kBAAkB6B,GAErC,GAAOW,EAASC,UAAWrD,EAAOU,UAAW,IAAUgC,EAAvD,CAIA,IAAM,IAAIY,KAAaF,EAAStB,KAAKyB,QAEpC,IAAOvD,EAAOwD,aAAcF,GAAc,CACzC,IAAIG,EAASL,EAAStB,KAAKyB,QAAQD,GACnCtD,EAAOc,kBAAkB4C,QAASD,GAIpCf,EAAMP,QAAUnC,EAAOW,UAGlB+B,EAAMP,QAAUO,EAAMN,QAC1BM,EAAML,UAAW,GAGlBrC,EAAOY,kBAAkB6B,GAAcC,EAEvC1C,EAAOuB,qBACPvB,EAAOwB,oBACPxB,EAAOsC,YAGRtC,EAAOqC,SAAW,WACjBrC,EAAOO,OAEyB,EAA3BP,EAAO2D,kBACX3D,EAAOkB,OAAOS,OAEd3B,EAAOoB,kBAAkBO,QAI3B3B,EAAOO,KAAO,WACbP,EAAOe,aAAa6C,WAAW,YAC/B5D,EAAOgB,YAAYS,OACnBzB,EAAOU,SAAU,GAGlBV,EAAO2D,gBAAkB,WACxB,OAAO3D,EAAOc,kBAAkBR,KAAK,OAAOkC,QAG7CxC,EAAOuB,mBAAqB,WAC3BxB,EAAE,6CAA6C8D,KAAM7D,EAAO2D,oBAG7D3D,EAAOwB,kBAAoB,WAC1BtB,EAAYC,OAAQJ,EAAE,oDAAqDC,EAAO8D,uBAQnF9D,EAAO8D,mBAAqB,WAI3B,IAHA,IAAI1B,EAAQ,EACRC,EAAW,EAELN,EAAI,EAAGA,EAAI/B,EAAOY,kBAAkB4B,OAAQT,IAAM,CAC3D,IAAIW,EAAQ1C,EAAOY,kBAAkBmB,GAErCK,GAASM,EAAMN,MACfC,GAAcK,EAAML,SAAWK,EAAMN,MAAQM,EAAMP,OAGpD,GAAK,IAAME,GAAY,IAAMD,EAC5B,OAAO,EAER,IAAI/B,EAAWgC,EAAWD,EAE1B,OAAkB,KADlB/B,EAAW0D,KAAKC,MAAkB,IAAX3D,IACC,IAAMA,GAG/BL,EAAO6B,2BAA6B,SAAUoC,GAC7C,IAAItB,EAAY,CACfC,OAAQ,kDACRC,YAAa7C,EAAOmB,eAAe2B,OAGpC/C,EAAEkD,KAAMC,QAASP,EAAW,SAAUS,GACrCc,QAAQC,IAAKf,GAERA,EAASC,SACRY,GACJA,EAAUb,EAAStB,SAcvB9B,EAAOwD,aAAe,SAAUF,GAC/B,OAAOtD,EAAOc,kBAAkBR,KAAK,kBAAoBgD,EAAY,MAAMd,QAI5ExC,EAAOe,aAAaqD,MAAM,WACzBpE,EAAO0B,UAGR1B,EAAOgB,YAAYoD,MAAM,WACxBpE,EAAOO,SAGRP,EAAOmB,eAAekD,OAAO,WAC5BrE,EAAOqB,QACPpB,EAAOoB,UAORpB,EAAOc,aAAehB,EAAE,uCACxBE,EAAOqE,kBAAoB,GAC3BrE,EAAOsE,gBAAkB,EAEzBtE,EAAOuE,YAAczE,EAAE,mCACvBE,EAAOwE,WAAa1E,EAAE,kCAEtBE,EAAOoB,MAAQ,WACdpB,EAAOc,aAAaa,KAAK,YAAY,GACrC3B,EAAOsE,gBAAkB,EACzBtE,EAAOqE,kBAAoB,GAC3BrE,EAAOwE,WAAWhD,OAClBxB,EAAOuE,YAAY/C,OACnBxB,EAAOuB,qBAGRvB,EAAOyB,MAAQ,WACdzB,EAAOc,aAAaa,KAAK,YAAY,GAErC7B,EAAE,8CAA8C2E,KAAK,WACpDzE,EAAOqE,kBAAkBrC,KAAMlC,EAAE4E,MAAM7C,KAAK,cAG7C7B,EAAOsE,gBAAkBtE,EAAOqE,kBAAkB9B,OAElDvC,EAAO2E,mBAGR3E,EAAO2E,gBAAkB,WACxB3E,EAAO4E,kBACP5E,EAAOuE,YAAY7C,QAGpB1B,EAAO4E,gBAAkB,WAGnB,IAAM5E,EAAOqE,kBAAkB9B,QACnCvC,EAAO6E,yBAGR,IAAIC,EAAQ9E,EAAOqE,kBAAkBU,OAAQ,EAN5B,IAQjB/E,EAAOuB,oBAEP,IAAImB,EAAY,CACfC,OAAQ,yCACRC,YAAa7C,EAAOmB,eAAe2B,MACnCiC,MAAOA,GAGRhF,EAAEkD,KAAMC,QAASP,EAAW,SAAUS,GAChCA,EAASC,UACbtD,EAAE,2CAA2C6B,KAAK,OAAQwB,EAAStB,KAAKmD,WACxEhF,EAAO4E,sBAKV5E,EAAO6D,mBAAqB,WAC3B,GAAK,IAAM7D,EAAOsE,gBACjB,OAAO,EAER,IAAIlE,GAAaJ,EAAOsE,gBAAkBtE,EAAOqE,kBAAkB9B,QAAWvC,EAAOsE,gBAErF,OAAkB,KADlBlE,EAAW0D,KAAKC,MAAkB,IAAX3D,IACC,IAAMA,GAI/BJ,EAAOuB,kBAAoB,WAC1BtB,EAAYC,OAAQJ,EAAE,kDAAmDE,EAAO6D,uBAGjF7D,EAAO6E,uBAAyB,WAC/B7E,EAAOwE,WAAW9C,QAGnB1B,EAAOc,aAAaqD,MAAM,WACzBnE,EAAOyB","file":"manual-workflow-runner.min.js","sourcesContent":["/**\n * AutomateWoo Manual Workflows Runner\n */\n\njQuery(function($) {\n\n\tvar Finder = {};\n\tvar Runner = {};\n\tvar ProgressBar = {};\n\n\tProgressBar.update = function( $el, progress ) {\n\t\t$el.find('> .automatewoo-manual-runner-progress-bar__fill').stop().animate( {\n\t\t\twidth: progress + '%'\n\t\t}, progress === 0 ? 0 : 400 );\n\t};\n\n\tFinder.stopped = true;\n\tFinder.batchSize = 10;\n\n\t/**\n\t * Progress sorted by rule group\n\t *\n\t * @type {{}}\n\t */\n\tFinder.ruleGroupProgress = [];\n\n\t/**\n\t * Jquery objects\n\t *\n\t * @type {*|jQuery|HTMLElement}\n\t */\n\tFinder.$matchesTable = $('.automatewoo-manual-runner__matches-table');\n\tFinder.$resultsContainer = $('.automatewoo-manual-runner__matches-results');\n\tFinder.$startButton = $('.automatewoo-manual-runner__start-finder-btn');\n\tFinder.$stopButton = $('.automatewoo-manual-runner__stop-finder-btn');\n\tFinder.$step2 = $('.automatewoo-manual-runner__step-2');\n\tFinder.$step3 = $('.automatewoo-manual-runner__step-3');\n\tFinder.$workflowField = $('.automatewoo-manual-runner__workflow_field');\n\tFinder.$noMatchesMessage = $('.automatewoo-manual-runner__no-matches-message');\n\n\n\n\tFinder.reset = function() {\n\t\tFinder.ruleGroupProgress = [];\n\t\tFinder.stopped = true;\n\t\tFinder.$resultsContainer.empty();\n\t\tFinder.updateResultsCount();\n\t\tFinder.updateProgressBar();\n\t\tFinder.$step3.hide();\n\t\tFinder.$matchesTable.hide();\n\t\tFinder.$noMatchesMessage.hide();\n\t\tRunner.reset();\n\n\t};\n\n\tFinder.start = function() {\n\t\tFinder.reset();\n\n\t\tFinder.$stopButton.show();\n\t\tFinder.$matchesTable.show();\n\t\tFinder.stopped = false;\n\t\tFinder.$startButton.prop('disabled', true);\n\n\t\tFinder.getWorkflowQuickFilterInfo(function( data ){\n\t\t\tfor ( var i in data.possible_result_counts ) {\n\t\t\t\tFinder.ruleGroupProgress.push({\n\t\t\t\t\tgroup_number: i,\n\t\t\t\t\toffset: 0,\n\t\t\t\t\ttotal: data.possible_result_counts[i],\n\t\t\t\t\tcomplete: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tFinder.findSet();\n\t\t});\n\t};\n\n\t/**\n\t * Get the index of the next incomplete group in Finder.ruleGroupProgress\n\t *\n\t * @returns {number|boolean}\n\t */\n\tFinder.getCurrentRuleGroupIndex = function() {\n\t\tfor ( var i = 0; i < Finder.ruleGroupProgress.length; i++ ) {\n\t\t\t var group = Finder.ruleGroupProgress[i];\n\n\t\t\tif ( ! group.complete ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\n\tFinder.findSet = function() {\n\t\tif ( Finder.stopped || 0 === Finder.ruleGroupProgress.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar groupIndex = Finder.getCurrentRuleGroupIndex();\n\n\t\t// If no more incomplete groups, we're done!\n\t\tif ( false === groupIndex ) {\n\t\t\tFinder.complete();\n\t\t\treturn;\n\t\t}\n\n\t\tvar group = Finder.ruleGroupProgress[groupIndex];\n\n\t\tvar post_data = {\n\t\t\taction: 'aw_manual_workflow_runner_find_matches',\n\t\t\tworkflow_id: Finder.$workflowField.val(),\n\t\t\toffset: group.offset,\n\t\t\tbatch_size: Finder.batchSize,\n\t\t\trule_group: group.group_number,\n\t\t};\n\n\t\t$.post( ajaxurl, post_data, Finder.findSetResponse );\n\t};\n\n\tFinder.findSetResponse = function( response ) {\n\t\tvar groupIndex = Finder.getCurrentRuleGroupIndex();\n\t\tvar group = Finder.ruleGroupProgress[groupIndex];\n\n\t\tif ( ! response.success || Finder.stopped || false === group ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( var object_id in response.data.results ) {\n\t\t\t// IMPORTANT! - Don't add result if it already exists\n\t\t\tif ( ! Finder.resultExists( object_id ) ) {\n\t\t\t\tvar result = response.data.results[object_id];\n\t\t\t\tFinder.$resultsContainer.prepend( result );\n\t\t\t}\n\t\t}\n\n\t\tgroup.offset += Finder.batchSize;\n\n\t\t// Mark group has complete if required\n\t\tif ( group.offset >= group.total ) {\n\t\t\tgroup.complete = true;\n\t\t}\n\n\t\tFinder.ruleGroupProgress[groupIndex] = group;\n\n\t\tFinder.updateResultsCount();\n\t\tFinder.updateProgressBar();\n\t\tFinder.findSet();\n\t};\n\n\tFinder.complete = function() {\n\t\tFinder.stop();\n\n\t\tif ( Finder.getResultsCount() > 0 ) {\n\t\t\tFinder.$step3.show();\n\t\t} else {\n\t\t\tFinder.$noMatchesMessage.show();\n\t\t}\n\t};\n\n\tFinder.stop = function() {\n\t\tFinder.$startButton.removeProp('disabled');\n\t\tFinder.$stopButton.hide();\n\t\tFinder.stopped = true;\n\t};\n\n\tFinder.getResultsCount = function() {\n\t\treturn Finder.$resultsContainer.find('div').length;\n\t};\n\n\tFinder.updateResultsCount = function() {\n\t\t$('.automatewoo-manual-runner__matches-count').text( Finder.getResultsCount() );\n\t};\n\n\tFinder.updateProgressBar = function() {\n\t\tProgressBar.update( $('.automatewoo-manual-runner__matches-progress-bar'), Finder.getCurrentProgress() );\n\t};\n\n\t/**\n\t * Get the current progress of the finder.\n\t *\n\t * @returns {number}\n\t */\n\tFinder.getCurrentProgress = function() {\n\t\tvar total = 0;\n\t\tvar complete = 0;\n\n\t\tfor ( var i = 0; i < Finder.ruleGroupProgress.length; i++ ) {\n\t\t\tvar group = Finder.ruleGroupProgress[i];\n\n\t\t\ttotal += group.total;\n\t\t\tcomplete += ( group.complete ? group.total : group.offset );\n\t\t}\n\n\t\tif ( 0 === complete || 0 === total ) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar progress = complete / total;\n\t\tprogress = Math.round( progress * 100 );\n\t\treturn progress > 100 ? 100 : progress;\n\t};\n\n\tFinder.getWorkflowQuickFilterInfo = function( callback ) {\n\t\tvar post_data = {\n\t\t\taction: 'aw_manual_workflow_runner_get_quick_filter_info',\n\t\t\tworkflow_id: Finder.$workflowField.val(),\n\t\t};\n\n\t\t$.post( ajaxurl, post_data, function( response ) {\n\t\t\tconsole.log( response );\n\n\t\t\tif ( response.success ) {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback( response.data );\n\t\t\t\t}\n\t\t\t}\n\n\t\t} );\n\t};\n\n\n\t/**\n\t * Check if a result is already found in the results list.\n\t *\n\t * @param object_id\n\t * @returns {number}\n\t */\n\tFinder.resultExists = function( object_id ) {\n\t\treturn Finder.$resultsContainer.find('[data-item-id=\"' + object_id + '\"]').length;\n\t};\n\n\n\tFinder.$startButton.click(function(){\n\t\tFinder.start();\n\t});\n\n\tFinder.$stopButton.click(function(){\n\t\tFinder.stop();\n\t});\n\n\tFinder.$workflowField.change(function() {\n\t\tFinder.reset();\n\t\tRunner.reset();\n\t});\n\n\n\t/**\n\t * Runner object adds results to the queue.\n\t */\n\tRunner.$startButton = $('.automatewoo-manual-runner__run-now');\n\tRunner.itemsToAddToQueue = [];\n\tRunner.itemsToAddCount = 0;\n\n\tRunner.$log_adding = $('.automatewoo-step-3-log__adding');\n\tRunner.$log_added = $('.automatewoo-step-3-log__added');\n\n\tRunner.reset = function() {\n\t\tRunner.$startButton.prop('disabled', false);\n\t\tRunner.itemsToAddCount = 0;\n\t\tRunner.itemsToAddToQueue = [];\n\t\tRunner.$log_added.hide();\n\t\tRunner.$log_adding.hide();\n\t\tRunner.updateProgressBar();\n\t};\n\n\tRunner.start = function() {\n\t\tRunner.$startButton.prop('disabled', true);\n\n\t\t$('.automatewoo-manual-runner__matches-result').each(function(){\n\t\t\tRunner.itemsToAddToQueue.push( $(this).data('item-id') );\n\t\t});\n\n\t\tRunner.itemsToAddCount = Runner.itemsToAddToQueue.length;\n\n\t\tRunner.startAddToQueue();\n\t};\n\n\tRunner.startAddToQueue = function() {\n\t\tRunner.addBatchToQueue();\n\t\tRunner.$log_adding.show();\n\t};\n\n\tRunner.addBatchToQueue = function() {\n\t\tvar batch_size = 10;\n\n\t\tif ( 0 === Runner.itemsToAddToQueue.length ) {\n\t\t\tRunner.completedAddingToQueue();\n\t\t}\n\n\t\tvar batch = Runner.itemsToAddToQueue.splice( 0, batch_size );\n\n\t\tRunner.updateProgressBar();\n\n\t\tvar post_data = {\n\t\t\taction: 'aw_manual_workflow_runner_add_to_queue',\n\t\t\tworkflow_id: Finder.$workflowField.val(),\n\t\t\tbatch: batch,\n\t\t};\n\n\t\t$.post( ajaxurl, post_data, function( response ) {\n\t\t\tif ( response.success ) {\n\t\t\t\t$('.automatewoo-step-3-log__view-queue-url').prop('href', response.data.queue_url );\n\t\t\t\tRunner.addBatchToQueue();\n\t\t\t}\n\t\t} );\n\t};\n\n\tRunner.getCurrentProgress = function() {\n\t\tif ( 0 === Runner.itemsToAddCount ) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar progress = ( Runner.itemsToAddCount - Runner.itemsToAddToQueue.length ) / Runner.itemsToAddCount;\n\t\tprogress = Math.round( progress * 100 );\n\t\treturn progress > 100 ? 100 : progress;\n\t};\n\n\n\tRunner.updateProgressBar = function() {\n\t\tProgressBar.update( $('.automatewoo-manual-runner__queue-progress-bar'), Runner.getCurrentProgress() );\n\t};\n\n\tRunner.completedAddingToQueue = function() {\n\t\tRunner.$log_added.show();\n\t};\n\n\tRunner.$startButton.click(function(){\n\t\tRunner.start();\n\t});\n\n});"]}